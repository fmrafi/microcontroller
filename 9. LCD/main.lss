
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000420  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000420  00000494  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000040  00000000  00000000  000004aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000187  00000000  00000000  000004ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000a7b  00000000  00000000  00000671  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000002cf  00000000  00000000  000010ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000006ee  00000000  00000000  000013bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000160  00000000  00000000  00001aac  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000022f  00000000  00000000  00001c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000060c  00000000  00000000  00001e3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00002447  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	32 c0       	rjmp	.+100    	; 0x66 <__ctors_end>
   2:	44 c0       	rjmp	.+136    	; 0x8c <__bad_interrupt>
   4:	43 c0       	rjmp	.+134    	; 0x8c <__bad_interrupt>
   6:	42 c0       	rjmp	.+132    	; 0x8c <__bad_interrupt>
   8:	41 c0       	rjmp	.+130    	; 0x8c <__bad_interrupt>
   a:	40 c0       	rjmp	.+128    	; 0x8c <__bad_interrupt>
   c:	3f c0       	rjmp	.+126    	; 0x8c <__bad_interrupt>
   e:	3e c0       	rjmp	.+124    	; 0x8c <__bad_interrupt>
  10:	3d c0       	rjmp	.+122    	; 0x8c <__bad_interrupt>
  12:	3c c0       	rjmp	.+120    	; 0x8c <__bad_interrupt>
  14:	3b c0       	rjmp	.+118    	; 0x8c <__bad_interrupt>
  16:	3a c0       	rjmp	.+116    	; 0x8c <__bad_interrupt>
  18:	39 c0       	rjmp	.+114    	; 0x8c <__bad_interrupt>
  1a:	38 c0       	rjmp	.+112    	; 0x8c <__bad_interrupt>
  1c:	37 c0       	rjmp	.+110    	; 0x8c <__bad_interrupt>
  1e:	36 c0       	rjmp	.+108    	; 0x8c <__bad_interrupt>
  20:	35 c0       	rjmp	.+106    	; 0x8c <__bad_interrupt>
  22:	34 c0       	rjmp	.+104    	; 0x8c <__bad_interrupt>
  24:	33 c0       	rjmp	.+102    	; 0x8c <__bad_interrupt>

00000026 <LcdCustomChar>:
  26:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
  36:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
  46:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
  56:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

00000066 <__ctors_end>:
  66:	11 24       	eor	r1, r1
  68:	1f be       	out	0x3f, r1	; 63
  6a:	cf e5       	ldi	r28, 0x5F	; 95
  6c:	d4 e0       	ldi	r29, 0x04	; 4
  6e:	de bf       	out	0x3e, r29	; 62
  70:	cd bf       	out	0x3d, r28	; 61

00000072 <__do_copy_data>:
  72:	10 e0       	ldi	r17, 0x00	; 0
  74:	a0 e6       	ldi	r26, 0x60	; 96
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	e0 e2       	ldi	r30, 0x20	; 32
  7a:	f4 e0       	ldi	r31, 0x04	; 4
  7c:	02 c0       	rjmp	.+4      	; 0x82 <.do_copy_data_start>

0000007e <.do_copy_data_loop>:
  7e:	05 90       	lpm	r0, Z+
  80:	0d 92       	st	X+, r0

00000082 <.do_copy_data_start>:
  82:	a6 37       	cpi	r26, 0x76	; 118
  84:	b1 07       	cpc	r27, r17
  86:	d9 f7       	brne	.-10     	; 0x7e <.do_copy_data_loop>
  88:	02 d0       	rcall	.+4      	; 0x8e <main>
  8a:	c8 c1       	rjmp	.+912    	; 0x41c <_exit>

0000008c <__bad_interrupt>:
  8c:	b9 cf       	rjmp	.-142    	; 0x0 <__vectors>

0000008e <main>:
char name[]={"BANGLADESH BD"};
char value[]={"101035"};


int main()
{
  8e:	1f 93       	push	r17
  90:	cf 93       	push	r28
  92:	df 93       	push	r29
LCDinit();
  94:	db d0       	rcall	.+438    	; 0x24c <LCDinit>
LCDcursorOn();
  96:	35 d1       	rcall	.+618    	; 0x302 <LCDcursorOn>
LCDcursorOnBlink();
  98:	37 d1       	rcall	.+622    	; 0x308 <LCDcursorOnBlink>
//LCDhome();
LCDGotoXY(2,0);
  9a:	82 e0       	ldi	r24, 0x02	; 2
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	91 d0       	rcall	.+290    	; 0x1c2 <LCDGotoXY>
LCDstring(name,13);
  a0:	80 e6       	ldi	r24, 0x60	; 96
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	6d e0       	ldi	r22, 0x0D	; 13
  a6:	79 d0       	rcall	.+242    	; 0x19a <LCDstring>
LCDGotoXY(3,1);
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	61 e0       	ldi	r22, 0x01	; 1
  ac:	8a d0       	rcall	.+276    	; 0x1c2 <LCDGotoXY>
LCDstring(value,6);
  ae:	8e e6       	ldi	r24, 0x6E	; 110
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	66 e0       	ldi	r22, 0x06	; 6
  b4:	72 d0       	rcall	.+228    	; 0x19a <LCDstring>
  b6:	80 e1       	ldi	r24, 0x10	; 16
  b8:	97 e2       	ldi	r25, 0x27	; 39
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  ba:	29 e1       	ldi	r18, 0x19	; 25
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	f9 01       	movw	r30, r18
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <main+0x32>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  c6:	d9 f7       	brne	.-10     	; 0xbe <main+0x30>
//LCDGotoXY(8,1);
_delay_ms(1000);
LCDblank();
  c8:	25 d1       	rcall	.+586    	; 0x314 <LCDblank>
  ca:	88 e8       	ldi	r24, 0x88	; 136
  cc:	93 e1       	ldi	r25, 0x13	; 19
  ce:	29 e1       	ldi	r18, 0x19	; 25
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	f9 01       	movw	r30, r18
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <main+0x46>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  d8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  da:	d9 f7       	brne	.-10     	; 0xd2 <main+0x44>
_delay_ms(500);
LCDvisible();
  dc:	1e d1       	rcall	.+572    	; 0x31a <LCDvisible>
  de:	80 e1       	ldi	r24, 0x10	; 16
  e0:	97 e2       	ldi	r25, 0x27	; 39
  e2:	29 e1       	ldi	r18, 0x19	; 25
  e4:	30 e0       	ldi	r19, 0x00	; 0
  e6:	f9 01       	movw	r30, r18
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x5a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
  ec:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
  ee:	d9 f7       	brne	.-10     	; 0xe6 <main+0x58>
  f0:	10 e0       	ldi	r17, 0x00	; 0
  f2:	c0 e5       	ldi	r28, 0x50	; 80
  f4:	d3 ec       	ldi	r29, 0xC3	; 195
//LCDcursorRight(3);
//LCDcursorOnBlink();

for(int i=0;i<=15;i++)
{
LCDshiftRight(i);
  f6:	81 2f       	mov	r24, r17
  f8:	f7 d0       	rcall	.+494    	; 0x2e8 <LCDshiftRight>
  fa:	ce 01       	movw	r24, r28
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <main+0x6e>
 100:	1f 5f       	subi	r17, 0xFF	; 255
_delay_ms(1000);
//LCDclr();
//LCDcursorRight(3);
//LCDcursorOnBlink();

for(int i=0;i<=15;i++)
 102:	10 31       	cpi	r17, 0x10	; 16
 104:	c1 f7       	brne	.-16     	; 0xf6 <main+0x68>
{
LCDshiftRight(i);
_delay_ms(200);
}
}
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	df 91       	pop	r29
 10c:	cf 91       	pop	r28
 10e:	1f 91       	pop	r17
 110:	08 95       	ret

00000112 <LCDsendChar>:
 112:	28 2f       	mov	r18, r24
 114:	20 7f       	andi	r18, 0xF0	; 240
 116:	22 bb       	out	0x12, r18	; 18
 118:	90 9a       	sbi	0x12, 0	; 18
 11a:	93 9a       	sbi	0x12, 3	; 18
 11c:	2a ef       	ldi	r18, 0xFA	; 250
 11e:	30 e0       	ldi	r19, 0x00	; 0
 120:	f9 01       	movw	r30, r18
 122:	31 97       	sbiw	r30, 0x01	; 1
 124:	f1 f7       	brne	.-4      	; 0x122 <LCDsendChar+0x10>
 126:	93 98       	cbi	0x12, 3	; 18
 128:	90 98       	cbi	0x12, 0	; 18
 12a:	f9 01       	movw	r30, r18
 12c:	31 97       	sbiw	r30, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <LCDsendChar+0x1a>
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	44 e0       	ldi	r20, 0x04	; 4
 134:	88 0f       	add	r24, r24
 136:	99 1f       	adc	r25, r25
 138:	4a 95       	dec	r20
 13a:	e1 f7       	brne	.-8      	; 0x134 <LCDsendChar+0x22>
 13c:	82 bb       	out	0x12, r24	; 18
 13e:	90 9a       	sbi	0x12, 0	; 18
 140:	93 9a       	sbi	0x12, 3	; 18
 142:	c9 01       	movw	r24, r18
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <LCDsendChar+0x32>
 148:	93 98       	cbi	0x12, 3	; 18
 14a:	90 98       	cbi	0x12, 0	; 18
 14c:	c9 01       	movw	r24, r18
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <LCDsendChar+0x3c>
 152:	08 95       	ret

00000154 <LCDsendCommand>:
 154:	28 2f       	mov	r18, r24
 156:	20 7f       	andi	r18, 0xF0	; 240
 158:	22 bb       	out	0x12, r18	; 18
 15a:	93 9a       	sbi	0x12, 3	; 18
 15c:	2a ef       	ldi	r18, 0xFA	; 250
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	f9 01       	movw	r30, r18
 162:	31 97       	sbiw	r30, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <LCDsendCommand+0xe>
 166:	93 98       	cbi	0x12, 3	; 18
 168:	f9 01       	movw	r30, r18
 16a:	31 97       	sbiw	r30, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <LCDsendCommand+0x16>
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	54 e0       	ldi	r21, 0x04	; 4
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	5a 95       	dec	r21
 178:	e1 f7       	brne	.-8      	; 0x172 <LCDsendCommand+0x1e>
 17a:	82 bb       	out	0x12, r24	; 18
 17c:	93 9a       	sbi	0x12, 3	; 18
 17e:	c9 01       	movw	r24, r18
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	f1 f7       	brne	.-4      	; 0x180 <LCDsendCommand+0x2c>
 184:	93 98       	cbi	0x12, 3	; 18
 186:	c9 01       	movw	r24, r18
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <LCDsendCommand+0x34>
 18c:	08 95       	ret

0000018e <LCDclr>:
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	e1 df       	rcall	.-62     	; 0x154 <LCDsendCommand>
 192:	08 95       	ret

00000194 <LCDhome>:
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	de df       	rcall	.-68     	; 0x154 <LCDsendCommand>
 198:	08 95       	ret

0000019a <LCDstring>:
 19a:	0f 93       	push	r16
 19c:	1f 93       	push	r17
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	06 2f       	mov	r16, r22
 1a4:	00 97       	sbiw	r24, 0x00	; 0
 1a6:	41 f0       	breq	.+16     	; 0x1b8 <LCDstring+0x1e>
 1a8:	ec 01       	movw	r28, r24
 1aa:	10 e0       	ldi	r17, 0x00	; 0
 1ac:	03 c0       	rjmp	.+6      	; 0x1b4 <LCDstring+0x1a>
 1ae:	89 91       	ld	r24, Y+
 1b0:	b0 df       	rcall	.-160    	; 0x112 <LCDsendChar>
 1b2:	1f 5f       	subi	r17, 0xFF	; 255
 1b4:	10 17       	cp	r17, r16
 1b6:	d8 f3       	brcs	.-10     	; 0x1ae <LCDstring+0x14>
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	1f 91       	pop	r17
 1be:	0f 91       	pop	r16
 1c0:	08 95       	ret

000001c2 <LCDGotoXY>:
 1c2:	62 30       	cpi	r22, 0x02	; 2
 1c4:	31 f0       	breq	.+12     	; 0x1d2 <LCDGotoXY+0x10>
 1c6:	63 30       	cpi	r22, 0x03	; 3
 1c8:	31 f0       	breq	.+12     	; 0x1d6 <LCDGotoXY+0x14>
 1ca:	61 30       	cpi	r22, 0x01	; 1
 1cc:	29 f4       	brne	.+10     	; 0x1d8 <LCDGotoXY+0x16>
 1ce:	80 5c       	subi	r24, 0xC0	; 192
 1d0:	03 c0       	rjmp	.+6      	; 0x1d8 <LCDGotoXY+0x16>
 1d2:	8c 5e       	subi	r24, 0xEC	; 236
 1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <LCDGotoXY+0x16>
 1d6:	8c 5a       	subi	r24, 0xAC	; 172
 1d8:	80 68       	ori	r24, 0x80	; 128
 1da:	bc df       	rcall	.-136    	; 0x154 <LCDsendCommand>
 1dc:	08 95       	ret

000001de <CopyStringtoLCD>:
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	ec 01       	movw	r28, r24
 1e6:	86 2f       	mov	r24, r22
 1e8:	64 2f       	mov	r22, r20
 1ea:	eb df       	rcall	.-42     	; 0x1c2 <LCDGotoXY>
 1ec:	10 e0       	ldi	r17, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <CopyStringtoLCD+0x16>
 1f0:	90 df       	rcall	.-224    	; 0x112 <LCDsendChar>
 1f2:	1f 5f       	subi	r17, 0xFF	; 255
 1f4:	fe 01       	movw	r30, r28
 1f6:	e1 0f       	add	r30, r17
 1f8:	f1 1d       	adc	r31, r1
 1fa:	84 91       	lpm	r24, Z+
 1fc:	88 23       	and	r24, r24
 1fe:	c1 f7       	brne	.-16     	; 0x1f0 <CopyStringtoLCD+0x12>
 200:	df 91       	pop	r29
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	08 95       	ret

00000208 <LCDdefinechar>:
 208:	ef 92       	push	r14
 20a:	ff 92       	push	r15
 20c:	0f 93       	push	r16
 20e:	1f 93       	push	r17
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	7c 01       	movw	r14, r24
 216:	16 2f       	mov	r17, r22
 218:	11 0f       	add	r17, r17
 21a:	11 0f       	add	r17, r17
 21c:	11 0f       	add	r17, r17
 21e:	10 64       	ori	r17, 0x40	; 64
 220:	c0 e0       	ldi	r28, 0x00	; 0
 222:	d0 e0       	ldi	r29, 0x00	; 0
 224:	f7 01       	movw	r30, r14
 226:	ec 0f       	add	r30, r28
 228:	fd 1f       	adc	r31, r29
 22a:	04 91       	lpm	r16, Z+
 22c:	81 2f       	mov	r24, r17
 22e:	8c 0f       	add	r24, r28
 230:	91 df       	rcall	.-222    	; 0x154 <LCDsendCommand>
 232:	80 2f       	mov	r24, r16
 234:	6e df       	rcall	.-292    	; 0x112 <LCDsendChar>
 236:	21 96       	adiw	r28, 0x01	; 1
 238:	c8 30       	cpi	r28, 0x08	; 8
 23a:	d1 05       	cpc	r29, r1
 23c:	99 f7       	brne	.-26     	; 0x224 <LCDdefinechar+0x1c>
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	1f 91       	pop	r17
 244:	0f 91       	pop	r16
 246:	ff 90       	pop	r15
 248:	ef 90       	pop	r14
 24a:	08 95       	ret

0000024c <LCDinit>:
 24c:	1f 93       	push	r17
 24e:	cf 93       	push	r28
 250:	df 93       	push	r29
 252:	86 ea       	ldi	r24, 0xA6	; 166
 254:	9e e0       	ldi	r25, 0x0E	; 14
 256:	01 97       	sbiw	r24, 0x01	; 1
 258:	f1 f7       	brne	.-4      	; 0x256 <LCDinit+0xa>
 25a:	12 ba       	out	0x12, r1	; 18
 25c:	12 ba       	out	0x12, r1	; 18
 25e:	81 b3       	in	r24, 0x11	; 17
 260:	80 6f       	ori	r24, 0xF0	; 240
 262:	81 bb       	out	0x11, r24	; 17
 264:	81 b3       	in	r24, 0x11	; 17
 266:	8d 60       	ori	r24, 0x0D	; 13
 268:	81 bb       	out	0x11, r24	; 17
 26a:	80 e3       	ldi	r24, 0x30	; 48
 26c:	82 bb       	out	0x12, r24	; 18
 26e:	93 9a       	sbi	0x12, 3	; 18
 270:	2a ef       	ldi	r18, 0xFA	; 250
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	f9 01       	movw	r30, r18
 276:	31 97       	sbiw	r30, 0x01	; 1
 278:	f1 f7       	brne	.-4      	; 0x276 <LCDinit+0x2a>
 27a:	93 98       	cbi	0x12, 3	; 18
 27c:	f9 01       	movw	r30, r18
 27e:	31 97       	sbiw	r30, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <LCDinit+0x32>
 282:	82 bb       	out	0x12, r24	; 18
 284:	93 9a       	sbi	0x12, 3	; 18
 286:	c9 01       	movw	r24, r18
 288:	01 97       	sbiw	r24, 0x01	; 1
 28a:	f1 f7       	brne	.-4      	; 0x288 <LCDinit+0x3c>
 28c:	93 98       	cbi	0x12, 3	; 18
 28e:	c9 01       	movw	r24, r18
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <LCDinit+0x44>
 294:	80 e2       	ldi	r24, 0x20	; 32
 296:	82 bb       	out	0x12, r24	; 18
 298:	93 9a       	sbi	0x12, 3	; 18
 29a:	c9 01       	movw	r24, r18
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <LCDinit+0x50>
 2a0:	93 98       	cbi	0x12, 3	; 18
 2a2:	c9 01       	movw	r24, r18
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <LCDinit+0x58>
 2a8:	88 e2       	ldi	r24, 0x28	; 40
 2aa:	54 df       	rcall	.-344    	; 0x154 <LCDsendCommand>
 2ac:	8c e0       	ldi	r24, 0x0C	; 12
 2ae:	52 df       	rcall	.-348    	; 0x154 <LCDsendCommand>
 2b0:	c6 e2       	ldi	r28, 0x26	; 38
 2b2:	d0 e0       	ldi	r29, 0x00	; 0
 2b4:	60 e0       	ldi	r22, 0x00	; 0
 2b6:	16 2f       	mov	r17, r22
 2b8:	1f 5f       	subi	r17, 0xFF	; 255
 2ba:	ce 01       	movw	r24, r28
 2bc:	a5 df       	rcall	.-182    	; 0x208 <LCDdefinechar>
 2be:	28 96       	adiw	r28, 0x08	; 8
 2c0:	61 2f       	mov	r22, r17
 2c2:	18 30       	cpi	r17, 0x08	; 8
 2c4:	c1 f7       	brne	.-16     	; 0x2b6 <LCDinit+0x6a>
 2c6:	df 91       	pop	r29
 2c8:	cf 91       	pop	r28
 2ca:	1f 91       	pop	r17
 2cc:	08 95       	ret

000002ce <LCDshiftLeft>:
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	08 2f       	mov	r16, r24
 2d4:	10 e0       	ldi	r17, 0x00	; 0
 2d6:	03 c0       	rjmp	.+6      	; 0x2de <LCDshiftLeft+0x10>
 2d8:	8e e1       	ldi	r24, 0x1E	; 30
 2da:	3c df       	rcall	.-392    	; 0x154 <LCDsendCommand>
 2dc:	1f 5f       	subi	r17, 0xFF	; 255
 2de:	10 17       	cp	r17, r16
 2e0:	d8 f3       	brcs	.-10     	; 0x2d8 <LCDshiftLeft+0xa>
 2e2:	1f 91       	pop	r17
 2e4:	0f 91       	pop	r16
 2e6:	08 95       	ret

000002e8 <LCDshiftRight>:
 2e8:	0f 93       	push	r16
 2ea:	1f 93       	push	r17
 2ec:	08 2f       	mov	r16, r24
 2ee:	10 e0       	ldi	r17, 0x00	; 0
 2f0:	03 c0       	rjmp	.+6      	; 0x2f8 <LCDshiftRight+0x10>
 2f2:	88 e1       	ldi	r24, 0x18	; 24
 2f4:	2f df       	rcall	.-418    	; 0x154 <LCDsendCommand>
 2f6:	1f 5f       	subi	r17, 0xFF	; 255
 2f8:	10 17       	cp	r17, r16
 2fa:	d8 f3       	brcs	.-10     	; 0x2f2 <LCDshiftRight+0xa>
 2fc:	1f 91       	pop	r17
 2fe:	0f 91       	pop	r16
 300:	08 95       	ret

00000302 <LCDcursorOn>:
 302:	8e e0       	ldi	r24, 0x0E	; 14
 304:	27 df       	rcall	.-434    	; 0x154 <LCDsendCommand>
 306:	08 95       	ret

00000308 <LCDcursorOnBlink>:
 308:	8f e0       	ldi	r24, 0x0F	; 15
 30a:	24 df       	rcall	.-440    	; 0x154 <LCDsendCommand>
 30c:	08 95       	ret

0000030e <LCDcursorOFF>:
 30e:	8c e0       	ldi	r24, 0x0C	; 12
 310:	21 df       	rcall	.-446    	; 0x154 <LCDsendCommand>
 312:	08 95       	ret

00000314 <LCDblank>:
 314:	88 e0       	ldi	r24, 0x08	; 8
 316:	1e df       	rcall	.-452    	; 0x154 <LCDsendCommand>
 318:	08 95       	ret

0000031a <LCDvisible>:
 31a:	8c e0       	ldi	r24, 0x0C	; 12
 31c:	1b df       	rcall	.-458    	; 0x154 <LCDsendCommand>
 31e:	08 95       	ret

00000320 <LCDcursorLeft>:
 320:	0f 93       	push	r16
 322:	1f 93       	push	r17
 324:	08 2f       	mov	r16, r24
 326:	10 e0       	ldi	r17, 0x00	; 0
 328:	03 c0       	rjmp	.+6      	; 0x330 <LCDcursorLeft+0x10>
 32a:	80 e1       	ldi	r24, 0x10	; 16
 32c:	13 df       	rcall	.-474    	; 0x154 <LCDsendCommand>
 32e:	1f 5f       	subi	r17, 0xFF	; 255
 330:	10 17       	cp	r17, r16
 332:	d8 f3       	brcs	.-10     	; 0x32a <LCDcursorLeft+0xa>
 334:	1f 91       	pop	r17
 336:	0f 91       	pop	r16
 338:	08 95       	ret

0000033a <LCDcursorRight>:
 33a:	0f 93       	push	r16
 33c:	1f 93       	push	r17
 33e:	08 2f       	mov	r16, r24
 340:	10 e0       	ldi	r17, 0x00	; 0
 342:	03 c0       	rjmp	.+6      	; 0x34a <LCDcursorRight+0x10>
 344:	84 e1       	ldi	r24, 0x14	; 20
 346:	06 df       	rcall	.-500    	; 0x154 <LCDsendCommand>
 348:	1f 5f       	subi	r17, 0xFF	; 255
 34a:	10 17       	cp	r17, r16
 34c:	d8 f3       	brcs	.-10     	; 0x344 <LCDcursorRight+0xa>
 34e:	1f 91       	pop	r17
 350:	0f 91       	pop	r16
 352:	08 95       	ret

00000354 <LCDprogressBar>:
 354:	df 92       	push	r13
 356:	ef 92       	push	r14
 358:	ff 92       	push	r15
 35a:	0f 93       	push	r16
 35c:	1f 93       	push	r17
 35e:	cf 93       	push	r28
 360:	df 93       	push	r29
 362:	d4 2e       	mov	r13, r20
 364:	96 e0       	ldi	r25, 0x06	; 6
 366:	89 9f       	mul	r24, r25
 368:	c0 01       	movw	r24, r0
 36a:	11 24       	eor	r1, r1
 36c:	24 2f       	mov	r18, r20
 36e:	30 e0       	ldi	r19, 0x00	; 0
 370:	ac 01       	movw	r20, r24
 372:	42 9f       	mul	r20, r18
 374:	c0 01       	movw	r24, r0
 376:	43 9f       	mul	r20, r19
 378:	90 0d       	add	r25, r0
 37a:	52 9f       	mul	r21, r18
 37c:	90 0d       	add	r25, r0
 37e:	11 24       	eor	r1, r1
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	39 d0       	rcall	.+114    	; 0x3f6 <__divmodhi4>
 384:	eb 01       	movw	r28, r22
 386:	cb 01       	movw	r24, r22
 388:	66 e0       	ldi	r22, 0x06	; 6
 38a:	70 e0       	ldi	r23, 0x00	; 0
 38c:	20 d0       	rcall	.+64     	; 0x3ce <__udivmodhi4>
 38e:	e8 2e       	mov	r14, r24
 390:	ff 24       	eor	r15, r15
 392:	00 e0       	ldi	r16, 0x00	; 0
 394:	10 e0       	ldi	r17, 0x00	; 0
 396:	11 c0       	rjmp	.+34     	; 0x3ba <LCDprogressBar+0x66>
 398:	c8 01       	movw	r24, r16
 39a:	05 96       	adiw	r24, 0x05	; 5
 39c:	c8 17       	cp	r28, r24
 39e:	d9 07       	cpc	r29, r25
 3a0:	10 f0       	brcs	.+4      	; 0x3a6 <LCDprogressBar+0x52>
 3a2:	85 e0       	ldi	r24, 0x05	; 5
 3a4:	06 c0       	rjmp	.+12     	; 0x3b2 <LCDprogressBar+0x5e>
 3a6:	c0 17       	cp	r28, r16
 3a8:	d1 07       	cpc	r29, r17
 3aa:	10 f0       	brcs	.+4      	; 0x3b0 <LCDprogressBar+0x5c>
 3ac:	8e 2d       	mov	r24, r14
 3ae:	01 c0       	rjmp	.+2      	; 0x3b2 <LCDprogressBar+0x5e>
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	af de       	rcall	.-674    	; 0x112 <LCDsendChar>
 3b4:	f3 94       	inc	r15
 3b6:	0a 5f       	subi	r16, 0xFA	; 250
 3b8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ba:	fd 14       	cp	r15, r13
 3bc:	68 f3       	brcs	.-38     	; 0x398 <LCDprogressBar+0x44>
 3be:	df 91       	pop	r29
 3c0:	cf 91       	pop	r28
 3c2:	1f 91       	pop	r17
 3c4:	0f 91       	pop	r16
 3c6:	ff 90       	pop	r15
 3c8:	ef 90       	pop	r14
 3ca:	df 90       	pop	r13
 3cc:	08 95       	ret

000003ce <__udivmodhi4>:
 3ce:	aa 1b       	sub	r26, r26
 3d0:	bb 1b       	sub	r27, r27
 3d2:	51 e1       	ldi	r21, 0x11	; 17
 3d4:	07 c0       	rjmp	.+14     	; 0x3e4 <__udivmodhi4_ep>

000003d6 <__udivmodhi4_loop>:
 3d6:	aa 1f       	adc	r26, r26
 3d8:	bb 1f       	adc	r27, r27
 3da:	a6 17       	cp	r26, r22
 3dc:	b7 07       	cpc	r27, r23
 3de:	10 f0       	brcs	.+4      	; 0x3e4 <__udivmodhi4_ep>
 3e0:	a6 1b       	sub	r26, r22
 3e2:	b7 0b       	sbc	r27, r23

000003e4 <__udivmodhi4_ep>:
 3e4:	88 1f       	adc	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	5a 95       	dec	r21
 3ea:	a9 f7       	brne	.-22     	; 0x3d6 <__udivmodhi4_loop>
 3ec:	80 95       	com	r24
 3ee:	90 95       	com	r25
 3f0:	bc 01       	movw	r22, r24
 3f2:	cd 01       	movw	r24, r26
 3f4:	08 95       	ret

000003f6 <__divmodhi4>:
 3f6:	97 fb       	bst	r25, 7
 3f8:	09 2e       	mov	r0, r25
 3fa:	07 26       	eor	r0, r23
 3fc:	0a d0       	rcall	.+20     	; 0x412 <__divmodhi4_neg1>
 3fe:	77 fd       	sbrc	r23, 7
 400:	04 d0       	rcall	.+8      	; 0x40a <__divmodhi4_neg2>
 402:	e5 df       	rcall	.-54     	; 0x3ce <__udivmodhi4>
 404:	06 d0       	rcall	.+12     	; 0x412 <__divmodhi4_neg1>
 406:	00 20       	and	r0, r0
 408:	1a f4       	brpl	.+6      	; 0x410 <__divmodhi4_exit>

0000040a <__divmodhi4_neg2>:
 40a:	70 95       	com	r23
 40c:	61 95       	neg	r22
 40e:	7f 4f       	sbci	r23, 0xFF	; 255

00000410 <__divmodhi4_exit>:
 410:	08 95       	ret

00000412 <__divmodhi4_neg1>:
 412:	f6 f7       	brtc	.-4      	; 0x410 <__divmodhi4_exit>
 414:	90 95       	com	r25
 416:	81 95       	neg	r24
 418:	9f 4f       	sbci	r25, 0xFF	; 255
 41a:	08 95       	ret

0000041c <_exit>:
 41c:	f8 94       	cli

0000041e <__stop_program>:
 41e:	ff cf       	rjmp	.-2      	; 0x41e <__stop_program>
